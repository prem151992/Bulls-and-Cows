type: edu
files:
- name: src/bullscows/Main.java
  visible: true
  text: |
    package bullscows;
    import java.util.Scanner;
    public class Main {
        public static void main(String[] args) {
            String secretCode = "9305";

            char[] secretCodeArray = secretCode.toCharArray();

            Scanner scanner = new Scanner(System.in);

            String inputNumber = scanner.nextLine();

            char[] inputNumberArray = inputNumber.toCharArray();


            int bulls = 0;
            int cows = 0;

            for (int i = 0; i < inputNumberArray.length; i++) {
                if (inputNumberArray[i] == secretCodeArray[i]) {
                    bulls += 1;
                } else {
                    for (int j = 0; j < secretCodeArray.length; j++) {
                        if (inputNumberArray[i] == secretCodeArray[j]) {
                            cows += 1;
                        }
                    }
                }
            }

            String printString = "";

            if(bulls > 0 && cows > 0) {
                printString = "Grade: " + bulls + " bull(s) and " + cows + " cow(s). The secret code is " + secretCode;
            } else if (bulls > 0) {
                printString = "Grade: " + bulls + " bull(s). The secret code is " + secretCode;
            } else if (cows > 0) {
                printString = "Grade: " + cows + " cows(s). The secret code is " + secretCode;
            } else {
                printString = "Grade: None. The secret code is " + secretCode;
            }

            System.out.println(printString);





    //        The secret code is prepared: ****.
    //
    //        Turn 1. Answer:
    //        1234
    //        Grade: None.
    //
    //                Turn 2. Answer:
    //        9876
    //        Grade: 4 bulls.
    //                Congrats! The secret code is 9876.
    //        System.out.print("The secret code is prepared: ");
    //        System.out.println("****");
    //        System.out.println();
    //        System.out.println("Turn 1. Answer:");
    //        System.out.println("1234");
    //        System.out.println("Grade: None.");
    //        System.out.println();
    //        System.out.println("Turn 2. Answer:");
    //        System.out.println("9876");
    //        System.out.println("Grade: 4 bulls.");
    //        System.out.println("Congrats! The secret code is 9876.");

        }
    }
  learner_created: false
- name: test/BullsCowsTest.java
  visible: false
  text: |-
    import bullscows.Main;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.LinkedHashSet;
    import java.util.List;
    import java.util.stream.Collectors;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    public class BullsCowsTest extends StageTest<String> {

        // basic test case
        @DynamicTestingMethod
        CheckResult test1() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("4").toLowerCase().trim();

            return outputCheck(output, 4);
        }

        @DynamicTestingMethod
        CheckResult test2() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("1").toLowerCase().trim();

            return outputCheck(output, 1);
        }

        // test of incorrect input
        @DynamicTestingMethod
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("11").toLowerCase().trim();

            return outputCheck(output, 11);
        }

        @DynamicTestingMethod
        CheckResult test5() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("6").toLowerCase().trim();

            return outputCheck(output, 6);
        }

        @DynamicTestingMethod
        CheckResult test6() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("3").toLowerCase().trim();

            return outputCheck(output, 3);
        }


        CheckResult outputCheck(String source, int length) {

            if (length > 10) {
                if (source.toLowerCase().contains("error")) {
                    return CheckResult.correct();
                } else {
                    return CheckResult.wrong("An error message expected with input " +
                            "\"" + length + "\"");
                }
            }

            List<Integer> integers = expect(source).toContain(1).integers();
            source = "" + integers.get(0);

            if (source.length() != length) {
                return CheckResult.wrong("The output number of your program has " +
                        "an incorrect length (found " + source.length() + ")");
            }

            List<Integer> temp = stringToArrayOfNumbers(source);
            temp = new ArrayList<>(new LinkedHashSet<>(temp));

            if (temp.toArray().length != source.length()) {
                return CheckResult.wrong("Digits in the generated number are not unique.");
            }

            return CheckResult.correct();
        }

        private static List<Integer> stringToArrayOfNumbers(String array) {
            return Arrays.stream(array.split(""))
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/5431#comment
status: Failed
feedback:
  message: |-
    Wrong answer in test #1

    The output number of your program has an incorrect length (found 1)

    Please find below the output of your program during this failed test.
    Note that the &#39;&gt;&#39; character indicates the beginning of the input line.

    ---

    Please, enter the secret code&#39;s length:
    &gt; 4
    Okay, let&#39;s start a game!
    Turn 1:
  time: "Tue, 14 Mar 2023 03:33:48 UTC"
record: 3
